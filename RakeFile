require 'nokogiri'
require 'cgi'

desc 'create and upload a nuget package. requires deploy.bat with secure hash to be in your path. DOES NOT autoincrement version number.'
task :pushNuget do
  Dir['nspec*{nupkg}'].each {|f| File.delete(f)}
  sh 'nuget.exe pack nspec.nuspec'
  sh "deployNuget.bat #{Dir['*{nupkg}'][0]}"
end

desc 'run SampleSpecs with NSpecRunner. you can supply a single spec like so -> rake samples[spec_name]'
task :samples, :spec do |t,args| 
  spec = args[:spec] || ''

  sh "NSpecRunner/bin/debug/NSpecRunner.exe SampleSpecs/bin/debug/SampleSpecs.dll #{spec}"
end

desc 'supply the current tutorial markup in source.html and generate new.html containing current source code and output'
task :website do
  if File.exists? 'source.html'
    @doc = Nokogiri::HTML.fragment(File.read 'source.html')

    Dir['SampleSpecs/WebSite/**/*.*'].each {|f| run f}

    File.open('new.html', 'w') {|f| f.write(@doc) } 
  else
    puts 'you must download the current markup into source.html'
  end
end

def run file
  node = @doc.at("\##{class_for(file)}_code")

  if node.nil?
    puts "can't find pre with id = #{class_for(file)}_code"
  else
    node.add_next_sibling code_markup file 

    node.remove

    puts "pre with id = #{class_for(file)}_code replaced successfully"
  end

  node = nil

  node = @doc.at("\##{class_for(file)}_output")

  if node.nil?
    puts "can't find pre with id = #{class_for(file)}_output"
  else
    node.add_next_sibling output_markup file 

    node.remove

    puts "pre with id = #{class_for(file)}_outputreplaced successfully"
  end
end

def class_for file
  file.split('/').last.split('.').first
end

def code_markup file
  out = "<pre id=\"#{class_for(file)}_code\" data-timestamp=\"#{Time.new.inspect}\" class=\"brush: csharp;\">"
  out += CGI::escapeHTML(File.read file)
  out += '</pre>'
end

def output_markup file
  out = "<pre id=\"#{class_for(file)}_output\" data-timestamp=\"#{Time.new.inspect}\" style=\"font-size: 1.1em !important; color: #5ce632; background-color: #1b2426; padding: 10px;\">"
  out += CGI::escapeHTML(`nspecrunner/bin/debug/nspecrunner.exe samplespecs/bin/debug/samplespecs.dll #{class_for(file)}`.strip)
  out += '</pre>'
end
